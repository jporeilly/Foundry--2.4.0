---
# Preflight - Hardware
# Kubespray takes care of the Kubernetes preflight requirements.
- name: Configure Cluster Nodes
  hosts: "{{ groups['k8s-cluster'] }}"
  become: true
  become_method: sudo
  become_user: root
  gather_facts: true
  any_errors_fatal: true
  vars:
    ansible_ssh_private_key_file: "~/.ssh/id_rsa"
    ansible_ssh_private_key_file_name: "id_rsa"
    ansible_user: k8s
    dns_server: 10.0.0.254
    change_dns: true
    ansible_python_interpreter: /usr/bin/python3
  args:
    warn: false
    
  tasks:
   # Ping Nodes
   - name: Ping Nodes
     ping:
     tags: 
       - info
   
   # Update Packages
   - name: Update installed packages using YUM module
     yum:
      name: '*'
      state: latest
      update_cache: yes
      update_only: yes
     register: yum_update_status
     tags: 
      - updates
      
   # Remove Docker and PodMan to prevent runc conflicts
   - name: Remove Docker and Podman
     dnf:
       name:
       - docker
       - container-tools
       - docker-client
       - docker-client-latest
       - docker-common
       - docker-latest
       - docker-latest-logrotate
       - docker-logrotate
       - docker-selinux
       - docker-engine-selinux
       - docker-engine
       - buildah
       - skopeo
       - podman
       - containers-common
       - atom-registries
       - runc
       state: absent 
   
   # Remove legacy packages
   - name: Remove legacy packages
     yum:
      autoremove: yes

   # Add NFS packages 
   - name: NFS packages
     dnf:
      name:
        - nfs-utils
        - nfs4-acl-tools
      state: latest

   # easy option :)  Once Foundry installed open Master / Worker ports for network - Calico 
   - name: Turn off firewall for kubernetes Install
     command: systemctl disable firewalld

   # Elasticsearch requires a max map count > 262144
   # Details: https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html
   - name: Expand max_map_count 
     shell: |
       echo "vm.max_map_count=262144" >> /etc/sysctl.d/sysctl.conf
       sysctl -p
     tags: 
      - elastic

   # Writes out Hostnames to act as local DNS -  not really required as there's SkyTap DNS
   - lineinfile:
      path: /etc/sysconfig/network
      state: present
      line: 'HOSTNAME={{inventory_hostname}}.local'

   - lineinfile:
      path: /etc/hosts
      state: present
      line: '{{ansible_default_ipv4.address}}   {{inventory_hostname}}.local   {{inventory_hostname}}'
   
   # Check for DNS servers
   - name: Get dhcp/dhclient.conf
     shell: cat /etc/dhcp/dhclient.conf | grep domain-name-servers
     ignore_errors: true
     register: dhcp_nameserver_entry

   # This file will rebuild the /etc/resolv.conf file on reboot.   
   # Leverage the private DNS lookup of SkyTap
   - name: Override current DNS entries
     shell: |
        cp /etc/dhcp/dhclient.conf /etc/dhcp/dhclient.conf.{{ 10000 | random }}.bak
        echo "supersede domain-name-servers {{ dns_server }};" >> /etc/dhcp/dhclient.conf
     register: dhcp_update       
     when: change_dns and ("dhcp_nameserver_entry is not defined" or "'{{ dns_server }}' not in dhcp_nameserver_entry.stdout")      

   # Reboot the Nodes
   - name: Reboot the Nodes with all defaults
     shell: sleep 5 && reboot
     async: 1
     poll: 0
     when: yum_update_status.changed
     tags:
      - reboot